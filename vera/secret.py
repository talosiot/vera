# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/secret.ipynb (unless otherwise specified).

__all__ = ['CLIENT', 'get', 'create', 'update', 'delete']

# Cell
import boto3
CLIENT = boto3.client('secretsmanager')

# Cell
def get(name, client=None, **kwargs):
    '''
    Retrieves the secret with the given name
    '''
    client = client or CLIENT
    resp = client.get_secret_value(SecretId=name, **kwargs)
    str_value = resp.get('SecretString')
    byte_value = resp.get('SecretBytes')
    return str_value or byte_value

def create(name, value, client=None, **kwargs):
    '''
    Create a new secret with Name=name
    If you want SecretBytes instead of SecretString
    set value=None and specify SecretBytes in kwargs
    '''
    client = client or CLIENT
    if value is not None:
        kwargs['SecretString'] = value

    resp = client.create_secret(Name=name, **kwargs)
    ok = resp['ResponseMetadata']['HTTPStatusCode']==200
    return ok, resp

def update(name, value, client=None, **kwargs):
    '''
    Update the value of a secret with SecretId=name
    '''
    client = client or CLIENT
    if value is not None:
        kwargs['SecretString'] = value

    resp = client.put_secret_value(SecretId=name, **kwargs)
    ok = resp['ResponseMetadata']['HTTPStatusCode']==200
    return ok, resp

def delete(name, client=None, **kwargs):
    '''
    Schedule the secret with SecretId=name for deletion
    '''
    client = client or CLIENT
    resp = client.delete_secret(SecretId=name, **kwargs)
    ok = resp['ResponseMetadata']['HTTPStatusCode']==200
    return ok, resp